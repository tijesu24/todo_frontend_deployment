{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\User\\\\Documents\\\\Python Scripts\\\\Web\\\\todo_backend\\\\todo_frontend\\\\src\\\\App.js\",\n  _s = $RefreshSig$();\nimport './App.css';\nimport { useState, useEffect } from 'react';\nimport axios from 'axios';\nimport AddTask from './components/AddTask';\nimport TaskView from './components/TaskView';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nfunction App() {\n  _s();\n  const [allTasks, setAllTasks] = useState([]);\n  const [query, setQuery] = useState(\"\");\n  useEffect(() => {\n    axios.get(\"/api/\").then(res => setAllTasks(res.data.payload));\n  }, []);\n  const handleDelete = id => {\n    axios.delete(`/api/task/delete/${id}/`).then(() => {\n      setAllTasks(prevTasks => prevTasks.filter(task => task.id !== id));\n    }).catch(error => {\n      console.error(\"Error deleting task:\", error);\n    });\n  };\n  const markCompleted = id => {\n    axios.post(`/api/task/mark/${id}/`).then(() => {\n      setAllTasks(prevTasks => prevTasks.map(task => task.id === id ? {\n        ...task,\n        completed: true\n      } : task));\n    }).catch(error => {\n      console.error(\"Error marking task as completed:\", error);\n    });\n  };\n  const postTask = () => {\n    axios.post(\"/api/task\", {\n      task: query\n    }).then(res => {\n      setQuery(\"\");\n      setAllTasks(prevTasks => [...prevTasks, res.data]);\n    }).catch(error => {\n      console.error(\"Error adding task:\", error);\n    });\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(TaskView, {\n      tasks: allTasks,\n      onDelete: handleDelete,\n      onMarkCompleted: markCompleted\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"MLF9FbizwcAIbcOCV7wJIqml/U8=\");\n_c = App;\n;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useEffect","axios","AddTask","TaskView","jsxDEV","_jsxDEV","App","_s","allTasks","setAllTasks","query","setQuery","get","then","res","data","payload","handleDelete","id","delete","prevTasks","filter","task","catch","error","console","markCompleted","post","map","completed","postTask","children","tasks","onDelete","onMarkCompleted","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/User/Documents/Python Scripts/Web/todo_backend/todo_frontend/src/App.js"],"sourcesContent":["import './App.css';\nimport { useState, useEffect } from 'react';\nimport axios from 'axios'\nimport AddTask from './components/AddTask';\nimport TaskView from './components/TaskView';\n\n\nfunction App() {\n  const [allTasks, setAllTasks] = useState([]);\n  const [query, setQuery] = useState(\"\");\n\n  useEffect(() => {\n    axios.get(\"/api/\").then(\n      (res) => setAllTasks(res.data.payload));\n  }, []);\n\n  const handleDelete = (id) => {\n    axios\n      .delete(`/api/task/delete/${id}/`)\n      .then(() => {\n        setAllTasks((prevTasks) => prevTasks.filter((task) => task.id !== id));\n      })\n      .catch((error) => {\n        console.error(\"Error deleting task:\", error);\n      });\n  };\n\n  const markCompleted = (id) => {\n    axios\n      .post(`/api/task/mark/${id}/`)\n      .then(() => {\n        setAllTasks((prevTasks) =>\n          prevTasks.map((task) =>\n            task.id === id ? { ...task, completed: true } : task\n          )\n        );\n      })\n      .catch((error) => {\n        console.error(\"Error marking task as completed:\", error);\n      });\n  };\n\n  const postTask = () => {\n    axios\n      .post(\"/api/task\", { task: query })\n      .then((res) => {\n        setQuery(\"\");\n        setAllTasks((prevTasks) => [...prevTasks, res.data]);\n      })\n      .catch((error) => {\n        console.error(\"Error adding task:\", error);\n      });\n  };\n\n  return (\n    <div>\n      {/* <AddTask query={query} onInputChange={setQuery} onPostTask={postTask} /> */}\n      <TaskView tasks={allTasks} onDelete={handleDelete} onMarkCompleted={markCompleted} />\n    </div>\n  );\n};\n\n\nexport default App;\n"],"mappings":";;AAAA,OAAO,WAAW;AAClB,SAASA,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAC3C,OAAOC,KAAK,MAAM,OAAO;AACzB,OAAOC,OAAO,MAAM,sBAAsB;AAC1C,OAAOC,QAAQ,MAAM,uBAAuB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAG7C,SAASC,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGV,QAAQ,CAAC,EAAE,CAAC;EAC5C,MAAM,CAACW,KAAK,EAAEC,QAAQ,CAAC,GAAGZ,QAAQ,CAAC,EAAE,CAAC;EAEtCC,SAAS,CAAC,MAAM;IACdC,KAAK,CAACW,GAAG,CAAC,OAAO,CAAC,CAACC,IAAI,CACpBC,GAAG,IAAKL,WAAW,CAACK,GAAG,CAACC,IAAI,CAACC,OAAO,CAAC,CAAC;EAC3C,CAAC,EAAE,EAAE,CAAC;EAEN,MAAMC,YAAY,GAAIC,EAAE,IAAK;IAC3BjB,KAAK,CACFkB,MAAM,CAAE,oBAAmBD,EAAG,GAAE,CAAC,CACjCL,IAAI,CAAC,MAAM;MACVJ,WAAW,CAAEW,SAAS,IAAKA,SAAS,CAACC,MAAM,CAAEC,IAAI,IAAKA,IAAI,CAACJ,EAAE,KAAKA,EAAE,CAAC,CAAC;IACxE,CAAC,CAAC,CACDK,KAAK,CAAEC,KAAK,IAAK;MAChBC,OAAO,CAACD,KAAK,CAAC,sBAAsB,EAAEA,KAAK,CAAC;IAC9C,CAAC,CAAC;EACN,CAAC;EAED,MAAME,aAAa,GAAIR,EAAE,IAAK;IAC5BjB,KAAK,CACF0B,IAAI,CAAE,kBAAiBT,EAAG,GAAE,CAAC,CAC7BL,IAAI,CAAC,MAAM;MACVJ,WAAW,CAAEW,SAAS,IACpBA,SAAS,CAACQ,GAAG,CAAEN,IAAI,IACjBA,IAAI,CAACJ,EAAE,KAAKA,EAAE,GAAG;QAAE,GAAGI,IAAI;QAAEO,SAAS,EAAE;MAAK,CAAC,GAAGP,IAClD,CACF,CAAC;IACH,CAAC,CAAC,CACDC,KAAK,CAAEC,KAAK,IAAK;MAChBC,OAAO,CAACD,KAAK,CAAC,kCAAkC,EAAEA,KAAK,CAAC;IAC1D,CAAC,CAAC;EACN,CAAC;EAED,MAAMM,QAAQ,GAAGA,CAAA,KAAM;IACrB7B,KAAK,CACF0B,IAAI,CAAC,WAAW,EAAE;MAAEL,IAAI,EAAEZ;IAAM,CAAC,CAAC,CAClCG,IAAI,CAAEC,GAAG,IAAK;MACbH,QAAQ,CAAC,EAAE,CAAC;MACZF,WAAW,CAAEW,SAAS,IAAK,CAAC,GAAGA,SAAS,EAAEN,GAAG,CAACC,IAAI,CAAC,CAAC;IACtD,CAAC,CAAC,CACDQ,KAAK,CAAEC,KAAK,IAAK;MAChBC,OAAO,CAACD,KAAK,CAAC,oBAAoB,EAAEA,KAAK,CAAC;IAC5C,CAAC,CAAC;EACN,CAAC;EAED,oBACEnB,OAAA;IAAA0B,QAAA,eAEE1B,OAAA,CAACF,QAAQ;MAAC6B,KAAK,EAAExB,QAAS;MAACyB,QAAQ,EAAEhB,YAAa;MAACiB,eAAe,EAAER;IAAc;MAAAS,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAE;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAClF,CAAC;AAEV;AAAC/B,EAAA,CArDQD,GAAG;AAAAiC,EAAA,GAAHjC,GAAG;AAqDX;AAGD,eAAeA,GAAG;AAAC,IAAAiC,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}